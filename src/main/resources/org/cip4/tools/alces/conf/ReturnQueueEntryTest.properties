# CheckJDF:
# CheckJDF: JDF validator; -- (c) 2001-2007 CIP4
# JDF 1.3 compatible version
# 
# Code based on schema JDF_1.3.xsd Release Candidate 001
# Build version CIP4 JDF Writer Java 1.3 BLD 43
# 
# ******************************************************************************************
# Usage: <input JDF files>
# -V(ersion) -q(uiet) -c(omplete) -n(amespace) -v(alidate) -t(ime)
# -u(RL)<URL> -h(ost) -p(ort) -l(ocation)<schemaLocation> -L(ocation)<schemaLocation>
# -d(eviceCapabilities)<input JDM file>  -P(resentValueLists) 
# 
# -? usage info
# -q is quiet for valid files
# -Q is completely quiet for all files
# -n will report all elements from foreign name spaces
# -c requires all required elements and attributes to exist, else incomplete JDF is OK
# -d location of a device capabilities file to test against
# -f force version to a given jdf version (1.0, 1.1, 1.2, 1.3)
# -m print multiple IDs
# -P device capabilities parameter. Use present value lists, otherwise allowed value lists
# -u URL to send the JMF to. In this case, checkJDF will validate the response from the URL
# -U check for dangling URL attributes
# -h proxy host name
# -p proxy port name
# -v validate using XML Schema validation;
#    the Schema can be defined in the xsi:schemaLocation tag in the JDF or using the -l or -L switch
# -V Always print a version stamp, even in quiet mode (-q)
# -L location of the schema for the Namespace "http://www.CIP4.org/JDFSchema_1_1"
#    Note that blanks ' ' are invalid in the file names
# -l location of additional private schema for validation in the same format as xsi:schemaLocation
#    except that multiple schema and schema/namespace pairs are separated by commas ',' not blanks ' '
#    The JDF schema specified in the -L switch should not be included in this list
# -t print out Timing information
# -T Translation language for the xslt output
# -w print out Warnings (deprecated etc.)
# -x output filename that contains an xml formatted error report
# -X XSL stylesheet to apply to the xml formatted error report as specified in -x


# ReturnQueueEntryTest substitutions variables:
#  $J - will be replaced by absolute path to JDF file
#  $R - will be replaced by aboslute path to XML report file

checkjdf.commandline = $J -Q -c -v -L ../testdata/schema/JDF.xsd -x $R