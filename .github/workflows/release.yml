name: Release

on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash
env:
  tool: Alces
jobs:
  macos-build:
    runs-on: macos-latest
    steps:
      - name: Setup JDK 15
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 15
          check-latest: true

      - name: Setup Tooling
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon

      - name: Install the Apple certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE}}
          P12_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Check out sources...
        uses: actions/checkout@v2

      - name: Build with Gradle
        run: ./gradlew jpackage -PprojectVersion="${GITHUB_REF/refs\/tags\//}"

      - name: ✏️Notarize
        env:
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD}}
        run: |
          mv ./build/jpackage/${{ env.tool }}-*.dmg ./build/jpackage/${{ env.tool }}.dmg
          gon .github/workflows/macos/gon-notarize.json
          mv build/jpackage/${{ env.tool }}.dmg build/jpackage/${{ env.tool }}-${GITHUB_REF/refs\/tags\//}.dmg

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/jpackage/*.dmg
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  windows-build:
    runs-on: windows-latest
    steps:
      - name: Setup JDK 15
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 15
          check-latest: true

      - name: Check out sources...
        uses: actions/checkout@v2

      - name: Build with Gradle
        run: ./gradlew jpackage -PprojectVersion="${GITHUB_REF/refs\/tags\//}"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/jpackage/*.msi
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

