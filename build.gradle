import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'groovy'
    id 'application'
    id 'org.beryx.runtime' version '1.13.0'
    id 'jacoco'
}

mainClassName = 'org.cip4.tools.alces.Application'
def simpleProjectName = "Alces"

sourceCompatibility = 16
targetCompatibility = 16

if (project.hasProperty('projectVersion')) {
    version = project.projectVersion
} else {
    version = 'development'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

processResources {
    filesMatching(['**/*.properties', '**/*.yml']) {
        filter(ReplaceTokens, tokens:  [
                'name': project.properties['name'],
                'version': project.properties['version'],
                'timestamp': new Date().format('yyyy-MM-dd HH:mm:ss')
        ])
    }
}

application {
    mainClass = 'org.cip4.tools.alces.Application'
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.codehaus.groovy:groovy:+'
    implementation 'org.codehaus.groovy:groovy-xml:+'
    implementation 'org.cip4.lib.jdf:JDFLibJ:2.1.7.+'
    implementation 'com.formdev:flatlaf:2.+'

    implementation 'org.xhtmlrenderer:core-renderer:R8'

    testImplementation('org.mockito:mockito-core')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

runtime {
    jpackage {
        modules = [
                'java.desktop',
                'java.xml',
                'java.sql',
                'java.compiler',
                'java.logging',
                'java.prefs',
                'java.management',
                'jdk.xml.dom',
                'java.datatransfer',
                'java.naming',
                'java.security.jgss',
                'java.instrument',
                'jdk.crypto.ec',
                'jdk.unsupported'
        ]
        imageOptions = [
                "--copyright", "CIP4 Organization",
                "--vendor", "CIP4 Organization"
        ]
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def icon = "src/main/dist/alces.ico"
        if (currentOs.macOsX) {
            imageOptions += [
                    "--mac-sign",
                    "--mac-signing-key-user-name", "CIP4 Organization (4DL5XX9SG8)",
                    "--mac-package-identifier", "org.cip4.alces"
            ]
            icon = "src/main/dist/alces.icns"
        }
        if (currentOs.windows) {
            installerOptions += [
                    "--win-dir-chooser",
                    "--win-menu",
                    "--win-upgrade-uuid", "12abef0e-2d7f-4c51-9c8b-72ecb743bddc",
                    "--vendor", "CIP4 Organization",
            ]
        }
        imageOptions += ["--icon", icon]
        appVersion = project.version == "development" ? "1.0.0" : project.version
    }
}

test {
    dependsOn(jre)
    useJUnitPlatform()
    executable = jre.getJreDir().dir("bin").file("java").getAsFile().getAbsolutePath()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = false
    }
}

java {
    archivesBaseName = simpleProjectName
}
startScripts {
    applicationName = simpleProjectName
}