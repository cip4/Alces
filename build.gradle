import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'groovy'
    id 'application'
    id 'org.beryx.runtime' version '1.12.7'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

mainClassName = 'org.cip4.tools.alces.Application'

sourceCompatibility = 16
targetCompatibility = 16

if (project.hasProperty('projectVersion')) {
    version = project.projectVersion
} else {
    version = 'development'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

processResources {
    filesMatching(['**/*.properties', '**/*.yml']) {
        filter(ReplaceTokens, tokens:  [
                'name': project.properties['name'],
                'version': project.properties['version'],
                'timestamp': new Date().format('yyyy-MM-dd HH:mm:ss')
        ])
    }
}

application {
    mainClass = 'org.cip4.tools.alces.Application'
}

shadowJar {
    archiveClassifier.set('plain-all')
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.codehaus.groovy:groovy:+'
    implementation 'org.codehaus.groovy:groovy-xml:+'
    implementation 'org.cip4.lib.jdf:JDFLibJ:2.1.7.+'
    implementation 'com.formdev:flatlaf:1.+'

    implementation 'jdom:jdom:1.1'
    implementation 'org.xhtmlrenderer:core-renderer:R8'
    implementation 'concurrent:concurrent:1.3.4'
    implementation 'commons-vfs:commons-vfs:1.0'
    implementation 'org.mozilla:rhino:1.7.13'
    implementation 'jaxen:jaxen:1.2.0'

    testImplementation('org.mockito:mockito-core')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

runtime {
    jpackage {
        imageOptions = [
                "--copyright", "CIP4 Organization",
                "--vendor", "CIP4 Organization"
        ]
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def icon = "src/main/dist/alces.ico"
        if (currentOs.macOsX) {
            imageOptions += [
                    "--mac-sign",
                    "--mac-signing-key-user-name", "CIP4 Organization (4DL5XX9SG8)",
                    "--mac-package-identifier", "org.cip4.alces"
            ]
            icon = "src/main/dist/alces.icns"
        }
        if (currentOs.windows) {
            installerOptions += [
                    "--win-dir-chooser",
                    "--win-menu",
                    "--win-upgrade-uuid", "12abef0e-2d7f-4c51-9c8b-72ecb743bddc",
                    "--vendor", "CIP4 Organization"
            ]
        }
        imageOptions += ["--icon", icon]
        appVersion = project.version == "development" ? "1.0.0" : project.version
    }
}